import java.util.*;
public class MyClass {

    public static void main(String[] args) {
		//Your Code Here
		Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int s = sc.nextInt();
      
        int[] leap = new int[s];
               
        for(int i=0;i<s;i++)
        {
            leap[i]=sc.nextInt();
        }
       
        long[] ways = new long[n+1];
        
        ways[0]=1;
        
        for(int steps=1;steps<=n;steps++)
        {
            for(int index=0;index<s;index++)
            {
                if(steps>=leap[index])
                {
                    ways[steps]+=ways[steps-leap[index]];
                }
            }
        }
        
        System.out.print(ways[n]);
        
        
	}
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
import java.util.*;
public class MyClass {

    public static void main(String[] args) {
		//Your Code Here
		Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int s = sc.nextInt();
        int t = sc.nextInt();
        int[] leap = new int[s];
               
        for(int i=0;i<s;i++)
        {
            leap[i]=sc.nextInt();
        }
        Set<Integer> damagedStairs = new LinkedHashSet<>();
        
        for(int index=0;index<t;index++)
        {
            damagedStairs.add(sc.nextInt());
        }
        
        long[] ways = new long[n+1];
        
        ways[0]=1;
        
        for(int steps=1;steps<=n;steps++)
        {
            for(int index=0;index<s;index++)
            {
                if(steps>=leap[index] && !damagedStairs.contains(steps))
                {
                    ways[steps]+=ways[steps-leap[index]];
                }
            }
        }
        
        System.out.print(ways[n]);
        
        
	}
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
import java.util.*;
public class MyClass {

    public static void main(String[] args) {
		//Your Code Here
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int s = sc.nextInt();
		int t = sc.nextInt();
		int[] leap = new int[s];
		
		Set<Integer> slipperyStairs = new LinkedHashSet<>();
		
		for(int index=0;index<s;index++)
		{
		    leap[index]=sc.nextInt();
		}
        
        for(int index=0;index<t;index++)
        {
            slipperyStairs.add(sc.nextInt());
        }
        
        long[] ways = new long[n+1];
        ways[0]=1;
       
        for(int steps=1;steps<=n;steps++)
        {
            for(int index=0;index<s;index++)
            {
                if(steps>=leap[index])
                {
                    ways[steps]+=ways[steps-leap[index]];
                }
            }
            if(slipperyStairs.contains(steps))
            {
                int lastNonSlip = steps-1;
                while(lastNonSlip>0 && slipperyStairs.contains(lastNonSlip))
                {
                    lastNonSlip--;
                }
                if(lastNonSlip>0)
                {
                    ways[lastNonSlip]+=ways[steps];
                }
                ways[steps]=0;
            }
            
        }
        
        System.out.print(ways[n]);

	}
}
